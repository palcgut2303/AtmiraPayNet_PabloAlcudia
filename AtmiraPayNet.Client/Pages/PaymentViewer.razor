@page "/paymentletterview"

@using Microsoft.AspNetCore.Components.WebAssembly

@inject IPaymentLetterService paymentLetterService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Empleado")]


<h3>Visor de Pagos</h3>

<a id="createPayment" class="btn mb-2" style="background-color: rgb(222, 29, 122); color: white;" href="payment-letter">Crear Pago</a>

<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Banco Origen</th>
                <th>Banco Beneficiario</th>
                <th>Cantidad</th>
                <th>Divisa</th>
                <th>Estado</th>
                <th></th>

            </tr>
        </thead>
        <tbody>
            @if (resultList.Value == null)
            {
                @if (resultList.Message != null)
                {
                    
                }
                else
                {
                    <tr>
                        <td colspan="5" align="center">
                            <img style="width: 50px" src="https://media.tenor.com/On7kvXhzml4AAAAj/loading-gif.gif" />
                        </td>
                    </tr>
                }

            }
            else
            {
                @foreach (var payment in listPayment)
                {
                    <tr>
                        <td>@payment.Id</td>
                        <td>@payment.OriginBankName</td>
                        <td>@payment.DestinationBankName</td>
                        <td>@payment.PayAmount</td>
                        <td>@payment.currency</td>
                        <td>@payment.status</td>
                        <td>
                            @if (payment.status == "GENERADO")
                            {
                                <a class="btn btn-primary btn-sm ms-2" href="payment-letter/@payment.Id">
                                    Ver
                                </a>
                                <button type="button" class="btn btn-danger btn-sm ms-2" @onclick="(() => DownloadPDF(payment.Id))">
                                    Descargar PDF
                                </button>
                            }
                            else
                            {
                                <a class="btn btn-primary btn-sm  ms-2" href="payment-letter/@payment.Id">
                                    Editar
                                </a>
                            }

                        </td>
                    </tr>
                }
            }

        </tbody>

    </table>
</div>


@code {
    ResponseAPI<List<PaymentListAttribute>> resultList = new ResponseAPI<List<PaymentListAttribute>>();
    List<PaymentListAttribute> listPayment = new List<PaymentListAttribute>();

    string folderPath = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        resultList = await paymentLetterService.GetAttributePayment();

        listPayment = resultList.Value!;
    }

    private async Task DownloadPDF(int id)
    {

        var result = await paymentLetterService.GetPDFString(id);
        var model = result.Value!;


        if (result.Successful)
        {
            
                await JSRuntime.InvokeVoidAsync("downloadFile", new object[] { model, id.ToString() });
           


        }
    }

    // private async Task SelectFolder()
    // {
    //     await JSRuntime.InvokeVoidAsync("customFunctions.selectFolder", DotNetObjectReference.Create(this));


    // }

    // [JSInvokable]
    // public async Task FolderSelected(string folderPath)
    // {
    //     // Aquí puedes manejar la lógica con la ruta de la carpeta seleccionada
    //     Console.WriteLine($"Carpeta seleccionada: {folderPath}");

    //     this.folderPath = folderPath;

    //     await DownloadPDF(this.folderPath);

}

    

   


